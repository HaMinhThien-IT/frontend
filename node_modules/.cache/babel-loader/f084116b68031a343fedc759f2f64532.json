{"ast":null,"code":"var _jsxFileName = \"/home/ha/AleTech/toco-shop/src/page/order/Order.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { formatMoney } from '../../components/helper';\nimport ListProductOrder from './listProductItem/ListProductOrder';\nimport './Order.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Checkout() {\n  _s();\n\n  let listCart = [];\n  let localTam = localStorage.getItem('Cart');\n\n  if (localTam !== null) {\n    listCart = JSON.parse(localTam);\n  }\n\n  const [listCartItem, setListCartItem] = useState(listCart);\n  let total = 0;\n\n  for (let i = 0; i < listCartItem.length; i++) {\n    total += listCartItem[i].price * listCartItem[i].quantity;\n  }\n\n  const order = {\n    product: {\n      id: '',\n      name: '',\n      price: 0,\n      image: '',\n      quantity: 0\n    },\n    name: '',\n    address: '',\n    email: '',\n    createAt: Date.now(),\n    numberPhone: 0\n  };\n  const [newOrder, setNewOrder] = useState(order);\n\n  const onCheckOut = () => {\n    for (let i = 0; i < listCartItem.length; i++) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conTainerOrderx\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerOrder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleDeliveryAddress\",\n        children: \"Delivery Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputOrder\",\n          type: \"text\",\n          placeholder: \"Name ...\",\n          onChange: e => setNewOrder({ ...newOrder,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputOrder\",\n          type: \"text\",\n          placeholder: \"Number phone ...\",\n          onChange: e => setNewOrder({ ...newOrder,\n            numberPhone: Number(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputOrder\",\n          type: \"text\",\n          placeholder: \"Address\",\n          onChange: e => setNewOrder({ ...newOrder,\n            address: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputOrder\",\n          type: \"text\",\n          placeholder: \"Email\",\n          onChange: e => setNewOrder({ ...newOrder,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerListProductOrder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleDeliveryAddress\",\n        children: \"Your order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerITem\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"totalMoney\",\n          children: \" H\\xECnh \\u1EA3nh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"nameItemOrder\",\n          children: \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"quantity\",\n          children: \" S\\u1ED1 l\\u01B0\\u1EE3ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"priceItemOrder\",\n          children: \"Gi\\xE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"totalMoney\",\n          children: \"T\\u1ED5ng ti\\u1EC1n  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), listCartItem.map((item, index) => /*#__PURE__*/_jsxDEV(ListProductOrder, {\n        cart: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerOrderBottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"totalMoneyBottomTitle\",\n        children: \"T\\u1ED5ng ti\\u1EC1n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"totalMoneyBottom\",\n        children: [formatMoney(total), \" vnd\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Check out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Checkout, \"JylUwywGYggXAOGOMAU0gGn1omM=\");\n\n_c = Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/ha/AleTech/toco-shop/src/page/order/Order.tsx"],"names":["React","useState","formatMoney","ListProductOrder","Checkout","listCart","localTam","localStorage","getItem","JSON","parse","listCartItem","setListCartItem","total","i","length","price","quantity","order","product","id","name","image","address","email","createAt","Date","now","numberPhone","newOrder","setNewOrder","onCheckOut","e","target","value","Number","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { formatMoney } from '../../components/helper'\nimport { Cart } from '../../model/Cart'\nimport { Order } from '../../model/order'\n\nimport ListProductOrder from './listProductItem/ListProductOrder'\n\nimport './Order.css'\n\nexport default function Checkout() {\n    let listCart: Cart[] = []\n    let localTam = localStorage.getItem('Cart')\n    if (localTam !== null) {\n        listCart = JSON.parse(localTam)\n    }\n    const [listCartItem, setListCartItem] = useState<Cart[]>(listCart)\n    let total: number = 0\n    for (let i = 0; i < listCartItem.length; i++) {\n        total += listCartItem[i].price * listCartItem[i].quantity       \n    }\n    const order:Order ={\n        product:{id : '',name:'',price:0,image:'',quantity:0},\n        name: '',address:'',email:'',createAt:Date.now(),numberPhone:0\n    }\n    const [newOrder,setNewOrder] = useState<Order>(order)\n    \n    const onCheckOut = () =>{\n        for(let i =0;i<listCartItem.length;i++){\n           \n        }\n    }\n    \n    \n    return (\n        <div className='conTainerOrderx'>\n            \n            <div className='containerOrder'>\n            <div className=\"titleDeliveryAddress\">\n                Delivery Address\n            </div>\n            <div className=\"containerInput\">\n            <input className='inputOrder' type=\"text\" placeholder='Name ...' onChange={e =>(setNewOrder({...newOrder,name:e.target.value}))}/>\n            <input className='inputOrder' type=\"text\" placeholder='Number phone ...'onChange={e =>(setNewOrder({...newOrder,numberPhone:Number(e.target.value)}))}/>\n            <input className='inputOrder' type=\"text\" placeholder='Address'onChange={e =>(setNewOrder({...newOrder,address:e.target.value}))}/>\n            <input className='inputOrder' type=\"text\" placeholder='Email'onChange={e =>(setNewOrder({...newOrder,email:e.target.value}))}/>\n            </div>\n        </div>\n            <div className='containerListProductOrder'>\n            <div className=\"titleDeliveryAddress\">\n                Your order\n            </div>\n            <div className=\"containerITem\">\n            <p className='totalMoney'> Hình ảnh</p>\n                <h3 className=\"nameItemOrder\">Tên sản phẩm</h3>\n                <p className=\"quantity\"> Số lượng</p>\n                <p className=\"priceItemOrder\">Giá</p>\n                <p className='totalMoney'>Tổng tiền  </p>\n\n            </div>\n            {listCartItem.map((item,index)=><ListProductOrder cart={item} key={index}/>)}\n            </div>\n          \n            <div className='containerOrderBottom'>\n            <p className='totalMoneyBottomTitle'>Tổng tiền</p>\n            <p className='totalMoneyBottom'>{formatMoney(total)} vnd</p>\n            <button >Check out</button>\n    </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}