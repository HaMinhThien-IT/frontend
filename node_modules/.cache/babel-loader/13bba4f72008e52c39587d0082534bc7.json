{"ast":null,"code":"var _jsxFileName = \"/home/ha/AleTech/frontEnd/src/store/ContextOrderQuantity.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quantityDefault = {\n  quantity: 0,\n  onSetQuantityOrder: () => {}\n};\nexport const quanTityOrderContext = /*#__PURE__*/createContext(quantityDefault);\nexport default function ContextOrderQuantity(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [quantity, setQuantity] = useState(quantityDefault.quantity);\n\n  const onSetQuantityOrder = quantity => {\n    setQuantity(quantity);\n  };\n\n  const data = {\n    quantity,\n    onSetQuantityOrder\n  };\n  return /*#__PURE__*/_jsxDEV(quanTityOrderContext.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextOrderQuantity, \"jSXjG8B/mdOkdjecHgmHgujn7Ds=\");\n\n_c = ContextOrderQuantity;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextOrderQuantity\");","map":{"version":3,"sources":["/home/ha/AleTech/frontEnd/src/store/ContextOrderQuantity.tsx"],"names":["React","createContext","useState","quantityDefault","quantity","onSetQuantityOrder","quanTityOrderContext","ContextOrderQuantity","children","setQuantity","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAsDC,QAAtD,QAAsE,OAAtE;;AAMA,MAAMC,eAAoC,GAAC;AACvCC,EAAAA,QAAQ,EAAC,CAD8B;AAEvCC,EAAAA,kBAAkB,EAAE,MAAM,CAAE;AAFW,CAA3C;AAQA,OAAO,MAAMC,oBAAoB,gBAAGL,aAAa,CAAuBE,eAAvB,CAA1C;AACP,eAAe,SAASI,oBAAT,OAAkE;AAAA;;AAAA,MAApC;AAACC,IAAAA;AAAD,GAAoC;AAC7E,QAAM,CAACJ,QAAD,EAAUK,WAAV,IAAwBP,QAAQ,CAASC,eAAe,CAACC,QAAzB,CAAtC;;AACA,QAAMC,kBAAkB,GAAGD,QAAD,IAAoB;AAC1CK,IAAAA,WAAW,CAACL,QAAD,CAAX;AACH,GAFD;;AAGA,QAAMM,IAAI,GAAG;AAACN,IAAAA,QAAD;AAAUC,IAAAA;AAAV,GAAb;AACA,sBACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEK,IAAtC;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAXuBD,oB;;KAAAA,oB","sourcesContent":["import React, { createContext, ReactNode, useContext, useState } from 'react'\n\ninterface propsContextQuantity {\n    quantity :number,\n    onSetQuantityOrder: (quantity: number) => void\n}\nconst quantityDefault:propsContextQuantity={\n    quantity:0 ,\n    onSetQuantityOrder: () => {}\n}\ninterface quanTityContextProvider{\n    children : ReactNode\n}\n\nexport const quanTityOrderContext = createContext<propsContextQuantity>(quantityDefault)\nexport default function ContextOrderQuantity({children}:quanTityContextProvider) {\n    const [quantity,setQuantity]= useState<number>(quantityDefault.quantity)\n    const onSetQuantityOrder =(quantity:number) =>{\n        setQuantity(quantity)\n    }\n    const data = {quantity,onSetQuantityOrder}\n    return (\n        <quanTityOrderContext.Provider value={data}>\n            {children}\n        </quanTityOrderContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}