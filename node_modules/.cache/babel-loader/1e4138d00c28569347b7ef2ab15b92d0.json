{"ast":null,"code":"import axios from \"axios\";\nlet localHost = 'http://localhost:3000';\nconst accessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE2NDEzODUyODEsImV4cCI6MTY0MTM4NTM0MX0._vfX14XlbBg-8A0ngxqaj3KET1spPmhj6QWyDR_U7Do\";\nconst authAxios = axios.create({\n  baseURL: localHost,\n  timeout: 10000,\n  headers: {\n    authorization: `${accessToken}`\n  }\n});\n\nclass ProductController {\n  listProduct(page, search, pageSize) {\n    return axios.post(`${localHost}/product/filter`, {\n      page,\n      search,\n      pageSize\n    }).then(res => {\n      return res.data;\n    });\n  }\n\n  add(image, name, price) {\n    return axios.post(`${localHost}/add`, {\n      image,\n      name,\n      price\n    }).then(res => {\n      return res.data;\n    });\n  }\n\n  list() {\n    return authAxios.get(`/admin`).then(res => {\n      return res.data;\n    });\n  }\n\n  delete(id) {\n    return axios.delete(`${localHost}/product/${id}`).then(res => {\n      return res.data;\n    });\n  }\n\n  update(image, name, price, id) {\n    return axios.put(`${localHost}/edit/${id}`, {\n      image,\n      name,\n      price\n    }).then(res => {\n      return res.data;\n    });\n  }\n\n  detail(id) {\n    return axios.get(`${localHost}/detail/${id}`).then(res => {\n      return res.data;\n    });\n  }\n\n  search(name) {\n    return axios.get(`${localHost}/filter/${name}`).then(res => {\n      return res.data;\n    });\n  }\n\n}\n\nexport const productController = new ProductController();","map":{"version":3,"sources":["/home/ha/AleTech/frontEnd/src/controller/ProductController.ts"],"names":["axios","localHost","accessToken","authAxios","create","baseURL","timeout","headers","authorization","ProductController","listProduct","page","search","pageSize","post","then","res","data","add","image","name","price","list","get","delete","id","update","put","detail","productController"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAIC,SAAiB,GAAG,uBAAxB;AACA,MAAMC,WAAW,GAAG,kJAApB;AACA,MAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEJ,SADkB;AAE3BK,EAAAA,OAAO,EAAE,KAFkB;AAG3BC,EAAAA,OAAO,EAAC;AACJC,IAAAA,aAAa,EAAI,GAAEN,WAAY;AAD3B;AAHmB,CAAb,CAAlB;;AAOA,MAAMO,iBAAN,CAAwB;AACpBC,EAAAA,WAAW,CAACC,IAAD,EAAeC,MAAf,EAA+BC,QAA/B,EAAiD;AACxD,WAAOb,KAAK,CAACc,IAAN,CAAY,GAAEb,SAAU,iBAAxB,EAA0C;AAAEU,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,KAA1C,EAAsEE,IAAtE,CAA2EC,GAAG,IAAI;AACrF,aAAOA,GAAG,CAACC,IAAX;AACH,KAFM,CAAP;AAGH;;AACDC,EAAAA,GAAG,CAACC,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,EAAiE;AAChE,WAAOrB,KAAK,CAACc,IAAN,CAAY,GAAEb,SAAU,MAAxB,EAA+B;AAAEkB,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,KAA/B,EAAuDN,IAAvD,CAA4DC,GAAG,IAAI;AAAE,aAAOA,GAAG,CAACC,IAAX;AAAiB,KAAtF,CAAP;AACH;;AACDK,EAAAA,IAAI,GAAuB;AACvB,WAAOnB,SAAS,CAACoB,GAAV,CAAe,QAAf,EAAwBR,IAAxB,CAA6BC,GAAG,IAAI;AACvC,aAAOA,GAAG,CAACC,IAAX;AACH,KAFM,CAAP;AAGH;;AACDO,EAAAA,MAAM,CAACC,EAAD,EAAiC;AACnC,WAAOzB,KAAK,CAACwB,MAAN,CAAc,GAAEvB,SAAU,YAAWwB,EAAG,EAAxC,EAA2CV,IAA3C,CAAgDC,GAAG,IAAI;AAAE,aAAOA,GAAG,CAACC,IAAX;AAAiB,KAA1E,CAAP;AACH;;AACDS,EAAAA,MAAM,CAACP,KAAD,EAAgBC,IAAhB,EAA8BC,KAA9B,EAA4CI,EAA5C,EAA2E;AAC7E,WAAOzB,KAAK,CAAC2B,GAAN,CAAW,GAAE1B,SAAU,SAAQwB,EAAG,EAAlC,EAAqC;AAAEN,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,KAArC,EAA6DN,IAA7D,CAAkEC,GAAG,IAAI;AAAE,aAAOA,GAAG,CAACC,IAAX;AAAiB,KAA5F,CAAP;AACH;;AACDW,EAAAA,MAAM,CAACH,EAAD,EAA+B;AACjC,WAAOzB,KAAK,CAACuB,GAAN,CAAW,GAAEtB,SAAU,WAAUwB,EAAG,EAApC,EAAuCV,IAAvC,CAA4CC,GAAG,IAAI;AAAE,aAAOA,GAAG,CAACC,IAAX;AAAiB,KAAtE,CAAP;AACH;;AACDL,EAAAA,MAAM,CAACQ,IAAD,EAAa;AACf,WAAOpB,KAAK,CAACuB,GAAN,CAAW,GAAEtB,SAAU,WAAUmB,IAAK,EAAtC,EAAyCL,IAAzC,CAA8CC,GAAG,IAAI;AAAC,aAAOA,GAAG,CAACC,IAAX;AAAgB,KAAtE,CAAP;AACH;;AAzBmB;;AA2BxB,OAAO,MAAMY,iBAAiB,GAAG,IAAIpB,iBAAJ,EAA1B","sourcesContent":["\nimport axios from \"axios\";\nimport { Product } from \"../model/Product\";\n\nlet localHost: string = 'http://localhost:3000'\nconst accessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJpYXQiOjE2NDEzODUyODEsImV4cCI6MTY0MTM4NTM0MX0._vfX14XlbBg-8A0ngxqaj3KET1spPmhj6QWyDR_U7Do\"\nconst authAxios = axios.create({\n    baseURL: localHost,\n    timeout: 10000,\n    headers:{\n        authorization : `${accessToken}`\n    }\n})\nclass ProductController {\n    listProduct(page: number, search: string, pageSize: number) {\n        return axios.post(`${localHost}/product/filter`, { page, search, pageSize }).then(res => {\n            return res.data\n        })\n    }   \n    add(image: string, name: string, price: number): Promise<Product[]> {\n        return axios.post(`${localHost}/add`, { image, name, price }).then(res => { return res.data })\n    }\n    list(): Promise<Product[]> {\n        return authAxios.get(`/admin`).then(res => {\n            return res.data\n        })\n    }\n    delete(id: string): Promise<Product[]> {\n        return axios.delete(`${localHost}/product/${id}`).then(res => { return res.data })\n    }\n    update(image: string, name: string, price: number,id:string): Promise<Product[]> {\n        return axios.put(`${localHost}/edit/${id}`, { image, name, price }).then(res => { return res.data })\n    }\n    detail(id: string): Promise<Product> {\n        return axios.get(`${localHost}/detail/${id}`).then(res => { return res.data })\n    }\n    search(name:string){\n        return axios.get(`${localHost}/filter/${name}`).then(res => {return res.data})\n    }\n}\nexport const productController = new ProductController();"]},"metadata":{},"sourceType":"module"}